AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Amperity supported Lambda logic for handling data out of our webhook destination.
  

Metadata:
  AWS::ServerlessRepo::Application:
    Description: Consumes data generated by an amperity destination and sends to your API endpoint.
    Author: Amperity
    SpdxLicenseId: MIT
    LicenseUrl: LICENSE.txt
    ReadmeUrl: README.md
    Labels: ["amperity", "external-api", "boto3"]
    HomePageUrl: https://github.com/amperity/amperity-lambda-runner
# SemanticVersion has to be a 3 digit decimal otherwise
    SemanticVersion: 0.0.2
    SourceCodeUrl: https://github.com/amperity/amperity-lambda-runner
    Name: amperity-rudderstack-runner

# TODO need to create the right IAM role

Globals:
  Function:
    Timeout: 900

Resources:
  AmperityRunnerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./app
      Handler: app.lambda_handler
      Runtime: python3.9
      Events:
        APIEvent:
          Type: Api
          Properties:
            Path: /
            Method: post
            Auth:
              ApiKeyRequired: true

  LambdaInvokePolicy:
    Type: AWS::IAM::Role
    Properties:
      RoleName: LambdaInvokeRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "lambda:InvokeFunction"


#{
#    "Version": "2012-10-17",
#    "Statement": [
#        {
#            "Sid": "AllowLambdaToInvokeLambda",
#            "Effect": "Allow",
#            "Action": "lambda:InvokeFunction",
#            "Resource": "arn:aws:lambda:us-east-2:884752987182:function:phil-test"
#        }
#    ]
#}
